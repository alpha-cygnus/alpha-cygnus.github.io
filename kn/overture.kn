@startABC
ABCDEFG
@endABC


Note2Detune {
	PIN -> {note|(note - 69)*100} -> P2A -> AOUT
}

Note2Freq {
	PIN -> {note|pow(2, (note - 69)/12)*440} -> P2A -> AOUT
}

MainOut {
	AIN inp -> Dest dest, AOUT out
}

Echo {
	AIN inp -> Delay d -> * gwet -> inp -> * gdry -> AOUT out
	AIN<0.5> dry -> [gain]gdry
	AIN<0.5> wet -> [gain]gwet
	AIN<0.5> time -> [time]d
}

Invert {
	PIN -> {v|v?0:1} -> POUT
}

PingPong {
	AIN inp -> * gdecayIL -> Delay dl -> * gdecayLR -> Delay dr -> * gdecayRL -> dl
	inp -> * gdry -> AOUT out
	dl -> Pan pl -> out
	dr -> Pan pr -> out
	AIN<0.7> spread -> [pan]pr
	spread -> *-1 -> [pan]pl

	AIN<0.5> dry -> [gain]gdry
	AIN<0.3> decay -> [gain] gdecayLR, gdecayRL, gdecayIL
	AIN<0.4> time ->[time] dl, dr
}

TestSynth {
	MIDIIN inp -> Midi2Trigger trig, Midi2Note<LAST> note
	note -> Note2Detune ->[detune] Osc<SAW> o1, o2, o3, Osc<SQUARE> sub
	o1, o2, o3 -> Filter<HP> flt -> ADSR<0.01, 0.3, 0.5, 1> ampEnv -> AOUT out
	sub -> ampEnv
	ADSR<0.8, 0.3, 0, 0.5> fltEnv -> *10000 -> +30 -> [freq]flt
	trig ->[trigger] ampEnv, fltEnv
	+15 ->[detune] o1
	-15 ->[detune] o2
	-2400 ->[detune] sub
}

SpreadingLead {
	MIDIIN inp -> Midi2Trigger trig, Midi2Note<LAST> note
	note -> Note2Detune ->[detune] Osc<SAW> o1, o2, o3, o4, o5, Osc<SQUARE> sub
	o1, o2, o3, o4, o5 -> ADSR<0.1, 0.3, 0.7, 1> ampEnv -> *0.2 -> AOUT out
	trig ->([trigger]ampEnv; [trigger]ADSR<5, 0.1, 1, 0.3> -> Delay<0.3> sEnv)
	AIN<15> spread -> [gain]* gspread
	#sEnv -> gspread -> [detune] o2
	#sEnv -> gspread -> *-1 -> [detune] o3
	#sEnv -> gspread -> * 2 -> [detune] o4
	#sEnv -> gspread -> *-3 -> [detune] o5
	sEnv -> gspread -> ([detune] o2; *-1 -> [detune]o3; *2 -> [detune]o4; *-3 -> [detune]o5)
	-1200 ->[detune] sub
}

FM1 {
	MIDIIN inp -> Midi2Trigger trig, Midi2Note<LAST> note
	note -> Note2Detune ->[detune] Osc<SINE> o1, o2
	o2 -> *100 fmDetune ->[detune] o1
	trig ->[trigger] ADSR<5, 0.1, 1, 0.3> -> *500 ->[gain]fmDetune
	100 ->[gain] fmDetune
	-1800 ->[detune] o2
	0.5 -> [freq]Osc -> *100 ->[detune] o2
	o1 -> ADSR<0.1, 0.3, 0.7, 1> amp -> AOUT out
	trig ->[trigger] amp
}

BD1 {
	MIDIIN inp -> Midi2Trigger<RETRIG> trig, Midi2Note<LAST> note
	trig -> [trigger] ADSR<0.001, 0.09, 0.05, 0.3> freqEnv, ADSR<0.001, 0.2, 0, 0.2> ampEnv
	freqEnv -> *1000 ->[freq] Osc<SINE> osc -> ampEnv -> *0.5 -> AOUT out
	note -> Note2Detune ->[detune] osc
}

HH1 {
	MIDIIN inp -> Midi2Trigger<RETRIG> trig, Midi2Note<LAST> note
	trig -> [trigger]ADSR<0.01, 0.5, 0.001, 0.1> ampEnv
	Noise osc -> Filter<HP> flt 
		-> ampEnv -> *0.5 -> AOUT out

	note -> Note2Detune -> [detune]flt
	4800 ->[detune]flt
}
HH2 {
	PIN trig -> [trigger]ADSR<0.01, 0.5, 0, 0.1> ampEnv
	Noise osc -> Filter<HP> flt 
		-> ampEnv -> *0.5 -> AOUT out

	PIN<60> note -> Note2Detune -> [detune]flt
	4800 ->[detune]flt
}
CHH {
	PIN trig -> Count -> [trigger]ADSR<0.01, 0.075, 0, 0.1> ampEnv
	Noise osc -> Filter<HP> flt 
		-> ampEnv -> *0.5 -> AOUT out

	PIN<60> note -> Note2Detune -> [detune]flt
	4800 ->[detune]flt
}
OHH {
	PIN trig -> Count -> [trigger]ADSR<0.01, 0.5, 0, 0.1> ampEnv
	Noise osc -> Filter<HP> flt 
		-> ampEnv -> *0.5 -> AOUT out

	PIN<60> note -> Note2Detune -> [detune]flt
	4800 ->[detune]flt
}
BD2 {
	PIN trig -> [trigger] ADSR<0.001, 0.09, 0.05, 0.3> freqEnv, ADSR<0.001, 0.2, 0, 0.2> ampEnv
	freqEnv -> *1000 ->[freq] Osc<SINE> osc -> ampEnv -> *0.5 -> AOUT out
	PIN<60> note -> Note2Detune ->[detune] osc
}

SN2 {
	PIN trig -> BD2 bd, HH2 hh -> AOUT out
	{|48} -> [note]hh
	{|48} -> [note]bd
}


#Keyboard theKeyboard -> TestSynth ts -> Echo -> *(0.1) -> Pan pan -> MainOut theMainOut

Keyboard theKeyboard
	#-> SpreadingLead ts 
	#-> FM1 #, SpreadingLead
	-> (
	BD1
	HH1
	)
	#-> PingPong 
	-> *0.5 -> MainOut theMainOut

#Keyboard theKeyboard -> (
#	Midi2Note -> Note2CV -> Osc<SINE> sin -> *g -> PingPong -> *0.1 -> MainOut
#	Midi2Trigger -> [trigger]ADSR<0.2 0.2 0.8 1> -> [gain]g
#)

#{*v = 1 | v < 0 ? v : 0 }
#{*}

#0.3 -> [freq]Osc panLfo -> *0.5 -> [pan]pan
#theKeyboard -> Midi2Trigger -> [trigger]panLfo

UIDial d1, UIDial d2 -> {_v|v*99} -> UIDigits<4> o1, UIValue<3> o2
d2 -> {v|abs(v)} -> UILED l0

@UI {{d1 | d2} | o1 | {l0 | o2} }

@startABC
| D B AG
| D3 D/-D/
| DB AG
| "C"E4
| "Am"Ec BA
| "D7"F3 d
| ed cA
| "G"B4 |
| "G"DB AG
| D3 D/-D/
| DB AG
| "C"E3 E
| "Am"Ec BA
| "G"dd dd
| "D7"ed cA
| "G"G2 z2 |
|: "G"BB B2
| BB B2
| Bd G>A
| "G7"B4
| "C"cc c>c
| "G"cB BB/B/
| "A7"BA AB
| "D7"A2 d2
:| "D7"dd cA
| "G"G4
@endABC

@UI UILED bl0|UILED bl1|UILED bl2|UILED bl3|UILED bl4|UILED bl5|UILED bl6|UILED bl7

#Clock ->  ->
QDemux dmx

dmx[0] -> bl0
dmx[1] -> bl1
dmx[2] -> bl2
dmx[3] -> bl3
dmx[4] -> bl4
dmx[5] -> bl5
dmx[6] -> bl6
dmx[7] -> bl7

dmx[0] -> CHH chh
dmx[1] -> BD2 bd
dmx[2] -> SN2 sn
dmx[3] -> OHH ohh
dmx[4] -> chh

chh, ohh
, bd
, sn 
-> *0.2 -> theMainOut
Loop<
0q1010,0,
0q0001,0,
0q0101,0,
0q0010,0,
0q0001,0,
0q0011,0,
0q0100,0,
0q0001,
0q0002
> lp

@UI UIValue<2> vvv

Clock -> {c|floor((c - 10)/12)} -> lp -> dmx, vvv
